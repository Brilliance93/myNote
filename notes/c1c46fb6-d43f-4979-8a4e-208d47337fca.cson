createdAt: "2020-11-19T13:13:07.332Z"
updatedAt: "2020-11-19T14:11:09.026Z"
type: "MARKDOWN_NOTE"
folder: "e99b7e361c550eda843f"
title: "灰度发布"
tags: [
  "灰度发布"
]
content: '''
  2020/11/19 下午9:31:54
  # 灰度发布
  ## 一、实现思路
  #### 1、在代码中做。
  
  一套线上环境，代码中做开关，对于不同的用户走不同的逻辑
  
  #### 2、在接入层做。
  
  多套(隔离的)线上环境，接入层针对不同用户转发到不同的环境中
  
  ![72e0e5f8.png](:storage\\c1c46fb6-d43f-4979-8a4e-208d47337fca\\72e0e5f8.png)
  
  
  ---
  
  自定义负载均衡策略实现：
  接入层:
  1、nginx层实现（使用ngx+lua）
  2、网关层实现（spring-cloud-zuul）
  3、dubbo的灰度
  
  ---
  负载均衡：
  1、服务端负载均衡：例如Nginx，通过Nginx进行负载均衡，先发送请求，然后通过负载均衡算法，在多个服务器之间选择一个进行访问；即在服务器端再进行负载均衡算法分配。
  
  2、客户端负载均衡：例如ribbon或者dubbo，客户端会有一个服务器地址列表，在发送请求前通过负载均衡算法选择一个服务器，然后进行访问，这是客户端负载均衡；即在客户端就进行负载均衡算法分配。
  
  ---
  阿里巴巴内部有安全生产三板斧概念：**可灰度、可观测、可回滚**
  
  ---
  ## 二、灰度发布策略
  1、蓝绿发布：部署两套环境，新老版本流量切换
  **优点**：升级切换和回退比发布回滚迅速
  **缺点**：成本较高，需要部署两套环境。如果新版本中基础服务出现问题，会瞬间影响全网用户；如果新版本有问题也会影响全网用户
  ![23d53655.png](:storage\\c1c46fb6-d43f-4979-8a4e-208d47337fca\\23d53655.png)
  2、金丝雀发布
  **优点**：灵活，策略自定义，可以按照流量或具体的内容进行灰度(比如不同账号，不同参数)，出现问题不会影响全网用户
  **缺点**：没有覆盖到所有的用户导致出现问题不好排查
  ![965c27ac.png](:storage\\c1c46fb6-d43f-4979-8a4e-208d47337fca\\965c27ac.png)
  3、滚动发布：金丝雀发布的变形、分批发布、多批发布，适合大规模应用发布
  **优点**：出现问题不会影响全网用户，适合大规模应用发布
  **缺点**：发布和回滚周期较长
  ![0c5a601c.png](:storage\\c1c46fb6-d43f-4979-8a4e-208d47337fca\\0c5a601c.png)
  
  
  
  ## 三、微服务金丝雀发布开源实现
  1、核心是服务路由：通过控制服务路由逻辑来确定流量的走向，以此控制路由到任意节点。
'''
linesHighlighted: []
isStarred: false
isTrashed: false
